<?php

namespace safal\engtonepdateconverter;

use App\Http\Controllers\Controller;

class NepaliDateController extends Controller
{
    public $nepaliDate = [
        0  => [2000, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        1  => [2001, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        2  => [2002, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        3  => [2003, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        4  => [2004, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        5  => [2005, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        6  => [2006, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        7  => [2007, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        8  => [2008, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],
        9  => [2009, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        10 => [2010, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        11 => [2011, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        12 => [2012, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
        13 => [2013, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        14 => [2014, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        15 => [2015, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        16 => [2016, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
        17 => [2017, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        18 => [2018, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        19 => [2019, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        20 => [2020, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
        21 => [2021, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        22 => [2022, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
        23 => [2023, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        24 => [2024, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
        25 => [2025, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        26 => [2026, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        27 => [2027, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        28 => [2028, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        29 => [2029, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],
        30 => [2030, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        31 => [2031, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        32 => [2032, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        33 => [2033, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        34 => [2034, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        35 => [2035, 30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],
        36 => [2036, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        37 => [2037, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        38 => [2038, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        39 => [2039, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
        40 => [2040, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        41 => [2041, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        42 => [2042, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        43 => [2043, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
        44 => [2044, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        45 => [2045, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        46 => [2046, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        47 => [2047, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
        48 => [2048, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        49 => [2049, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
        50 => [2050, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        51 => [2051, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
        52 => [2052, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        53 => [2053, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
        54 => [2054, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        55 => [2055, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        56 => [2056, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],
        57 => [2057, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        58 => [2058, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        59 => [2059, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        60 => [2060, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        61 => [2061, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        62 => [2062, 30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31],
        63 => [2063, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        64 => [2064, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        65 => [2065, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        66 => [2066, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],
        67 => [2067, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        68 => [2068, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        69 => [2069, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        70 => [2070, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
        71 => [2071, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        72 => [2072, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],
        73 => [2073, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
        74 => [2074, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
        75 => [2075, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        76 => [2076, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
        77 => [2077, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
        78 => [2078, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
        79 => [2079, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
        80 => [2080, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
        81 => [2081, 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],
        82 => [2082, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
        83 => [2083, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
        84 => [2084, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
        85 => [2085, 31, 32, 31, 32, 30, 31, 30, 30, 29, 30, 30, 30],
        86 => [2086, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
        87 => [2087, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],
        88 => [2088, 30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30],
        89 => [2089, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
        90 => [2090, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
    ];

    private $nepaliDateArray = ['year' => '', 'month' => '', 'date' => ''];

    private function checkDateRange($year, $month, $day)
    {
        if ($year > 2033 || $year < 1944) {
            throw new \Exception('Conversion between 1944 to 2033 is only supported');
        }
        if ($month < 1 || $month > 12) {
            throw new \Exception('Month must be between 1-12');

        }
        if ($day < 1 || $day > 31) {
            throw new \Exception('Day must be between 1-31');
        }
        return true;
    }

    public function checkLeapYear($year)
    {
        if ($year % 4 == 0) {
            return true;
        }else{
            return false;

        }
    }

    public function convertToNepaliDate($year, $month, $day)
    {
        $year = intval($year);

        $month = intval($month);

        $day = intval($day);

        $check = $this->checkDateRange($year, $month, $day);

        if ($check !== true) {

           return $check;

        } else {
        
            $normalMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            
            $leapYearMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

            $initialEnglishYear = 1944;    

            $initialNepaliYear = 2000;

            $monthDifference = 9;

            $differenceInDay = 16;    

            $totalEnglishDays = 0;

            $dayDifference = 6;
            
            for ($i = 0; $i < ($year - $initialEnglishYear); $i++) { 

                if ($this->checkLeapYear($initialEnglishYear + $i) === true) {
                    for ($j = 0; $j < 12; $j++) {

                        $totalEnglishDays += $leapYearMonth[$j];
                    }
                } else {
                    for ($j = 0; $j < 12; $j++) {

                        $totalEnglishDays += $normalMonth[$j];
                    }

                }
            }

            
            for ($i = 0; $i < ($month - 1); $i++) {

                if ($this->checkLeapYear($year) === true) {

                    $totalEnglishDays += $leapYearMonth[$i];
                } else {

                    $totalEnglishDays += $normalMonth[$i];
                }
            }
            
            $totalEnglishDays += $day;

            $i = 0;

            $j = $monthDifference;

            $total_nDays = $differenceInDay;

            $m = $monthDifference;

            $y = $initialNepaliYear;
            
            while ($totalEnglishDays != 0) {

                $a = $this->nepaliDate[$i][$j];

                $total_nDays++;        

                $dayDifference++;               

                if ($total_nDays > $a) {

                    $m++;

                    $total_nDays = 1;

                    $j++;
                }
                if ($dayDifference > 7) {

                    $dayDifference = 1;
                }
                if ($m > 12) {

                    $y++;

                    $m = 1;
                }
                if ($j > 12) {

                    $j = 1;

                    $i++;
                }

                $totalEnglishDays--;
            }
            $numDay = $dayDifference;

            $this->nepaliDateArray['year'] = $this->changeToNepaliNumber($y);

            $this->nepaliDateArray['month'] = $this->changeToNepaliNumber($m);

            $this->nepaliDateArray['date'] = $this->changeToNepaliNumber($total_nDays);

            $this->nepaliDateArray['num_day'] = $this->changeToNepaliNumber($numDay);

            $sendOutput= $this->nepaliDateArray;

            return $sendOutput['year'] . '/' . $sendOutput['month'] . '/' . $sendOutput['date'];
        }
    }
    public function changeToNepaliNumber($string)
    {
        $string = strval($string);

        $nepaliNumbers = [0 => '०',
            1       => '१',
            2       => '२',
            3       => '३',
            4       => '४',
            5       => '५',
            6       => '६',
            7       => '७',
            8       => '८',
            9       => '९',
        ];

        $output = '';

        for ($i = 0; $i < strlen($string); $i++) {

            if (!isset($nepaliNumbers[$string[$i]])) {

                $output .= $string[$i];

            } else {

                $output .= $nepaliNumbers[$string[$i]];
            }
        }

        return $output;
    }
}
